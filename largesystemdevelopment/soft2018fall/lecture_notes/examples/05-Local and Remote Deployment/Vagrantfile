# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define :loc do |loc_config|
    loc_config.vm.box = 'bento/ubuntu-16.04'
    # For the Tomcat root web console
    loc_config.vm.network "forwarded_port", guest: 8080, host: 6080
    # For MySQL
    loc_config.vm.network "forwarded_port", guest: 3306, host: 3306

    loc_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", 1024]
      vb.customize ["modifyvm", :id, "--cpus", 1]
    end

    loc_config.vm.provision "shell", inline: "echo 'export ENV=loc' >> ~/.profile", run: "always"
    # loc_config.vm.provision "shell", path: "./provision.sh"
  end

  config.vm.synced_folder ".", "/vagrant", type: "rsync"
  config.vm.define :prod, autostart: false, primary: false do |prod_config|
    prod_config.vm.provider :digital_ocean do |digital_ocean, override|
      override.ssh.private_key_path = '~/.ssh/id_rsa'
      override.vm.box = 'digital_ocean'
      override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"

      digital_ocean.ssh_key_name = ENV["SSH_KEY_NAME"]
      digital_ocean.token = ENV["DIGITAL_OCEAN_TOKEN"]
      digital_ocean.image = 'ubuntu-16-04-x64'
      digital_ocean.region = 'fra1'
      digital_ocean.size = '1gb'
    end

    prod_config.vm.provision "shell", inline: "echo 'export ENV=prod' >> ~/.profile", run: "always"
    # prod_config.vm.provision "shell", path: "./provision.sh"
    prod_config.vm.provision "shell", privileged: false, inline: <<-SHELL
      sudo ufw allow 8080
      sudo ufw allow 3306
    SHELL
  end

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
  sudo apt-get update

  sudo sh -c "echo 'LC_ALL=en_US.UTF-8\nLC_CTYPE=en_US.UTF-8' >> /etc/environment"

  sudo apt-get install -y git
  sudo apt-get install -y wget

  echo "==================================================================="
  echo "=                       Installing Java 8                         ="
  echo "==================================================================="

  echo "Installing Java..."
  sudo apt-get -y install software-properties-common
  sudo add-apt-repository ppa:webupd8team/java
  sudo apt-get -y update
  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
  sudo apt-get -y install oracle-java8-installer
  sudo update-java-alternatives -s java-8-oracle

  # echo ". $HOME/.bashrc" >> $HOME/.bash_profile
  # echo "export PATH=$HOME/anaconda3/bin:$PATH" >> $HOME/.bash_profile

  echo "==================================================================="
  echo "=                       Installing Tomcat                         ="
  echo "==================================================================="
  echo "Based on: https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-8-on-ubuntu-16-04"

  sudo groupadd tomcat
  sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
  curl -O http://mirrors.rackhosting.com/apache/tomcat/tomcat-8/v8.5.23/bin/apache-tomcat-8.5.23.tar.gz
  sudo mkdir /opt/tomcat
  sudo tar xzvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1
  # rm apache-tomcat-8*tar.gz

  sudo chgrp -R tomcat /opt/tomcat
  sudo chmod -R g+r /opt/tomcat/conf
  sudo chmod g+x /opt/tomcat/conf
  sudo chown -R tomcat /opt/tomcat/webapps/ /opt/tomcat/work/ /opt/tomcat/temp/ /opt/tomcat/logs/

  sudo cp /vagrant/cfg/tomcat.service /etc/systemd/system/
  sudo systemctl daemon-reload
  sudo systemctl start tomcat
  sudo systemctl enable tomcat

  sudo cp /vagrant/cfg/tomcat-users.xml /opt/tomcat/conf/
  sudo cp /vagrant/cfg/manager_context.xml /opt/tomcat/webapps/manager/META-INF/context.xml
  sudo cp /vagrant/cfg/host_manager_context.xml /opt/tomcat/webapps/host-manager/META-INF/context.xml

  sudo systemctl restart tomcat

  echo "==================================================================="
  echo "=                       Installing MySQL                          ="
  echo "==================================================================="

  sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password cphbusiness2017'
  sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password cphbusiness2017'
  sudo apt-get update
  sudo apt-get install -y mysql-server mysql-client
  sudo chmod a+w /etc/mysql/mysql.cnf
  sudo echo "skip-external-locking" >> /etc/mysql/mysql.cnf
  sudo echo "bind-address=0.0.0.0" >> /etc/mysql/mysql.cnf
  sudo /etc/init.d/mysql restart
  mysql -u root -pcphbusiness2017 -e "create user 'root'@'10.0.2.2' identified by 'cphbusiness2017'; grant all privileges on *.* to 'root'@'10.0.2.2' with grant option; flush privileges;"
  sudo /etc/init.d/mysql restart

  echo "==================================================================="
  echo "=                             DONE                                ="
  echo "==================================================================="
  echo "To log onto the VM:"
  echo "$ vagrant ssh"
  echo "Tomcat admin username: admin"
  echo "Tomcat admin password: cphbusiness2017"
  echo "MySQL root password: cphbusiness2017"
  echo "connect to MySQL from CLI for example with:"
  echo "mysql -h 127.0.0.1 -u root -pcphbusiness2017"
  SHELL
end


# NOTES:
# Likely it is a good idea, to adapt this one: https://github.com/mikesprague/vagrant-lemtl
# **Important**, none of the above setup is secured. Likely it is a good idea 
# to incorporate SSL, see:
# For Tomcat: https://www.digitalocean.com/community/tutorials/how-to-encrypt-tomcat-8-connections-with-apache-or-nginx-on-ubuntu-16-04
# For MySQL: https://www.digitalocean.com/community/tutorials/how-to-configure-ssl-tls-for-mysql-on-ubuntu-16-04
